buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "2.0.4"
    id "com.matthewprenger.cursegradle" version "1.1.0"
    id "net.minecrell.licenser" version "0.4.1"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "net.minecrell.licenser"
def api = new groovy.json.JsonSlurper().parseText(file("${api_token_path}").text)
def mcVersion = project.mc_version
def keystore = new groovy.json.JsonSlurper().parseText(file("${keystore_path}").text)

version = project.version
group = "stevekung.mods.ytchat"
archivesBaseName = "YouTubeChat-" + mcVersion
sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "1.12.2-14.23.5.2775"
    runDir = "run"
    mappings = "snapshot_20171003"
    makeObfSourceJar = false

    replace "@FINGERPRINT@", keystore.sha1
    replaceIn "YouTubeChatMod.java"
}

repositories {
    // Curse Gradle
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    compile fileTree(dir: "M:/Modding/YouTubeChat/1.13-pre/.dependencies", include: "*.jar")
    compile files("library/SteveKunG's-Lib.jar")
}

license {
    header = file("LICENSE-header.txt")
    include "stevekung/mods/ytchat/"

    tasks {
        main {
            files = files("$rootDir/src/main/java")
        }
    }
}

shadowJar {
    relocate "org.apache.commons.codec", "stevekung.mods.ytchat.relocate.org.apache.commons.codec"
    relocate "org.apache.commons.logging", "stevekung.mods.ytchat.relocate.org.apache.commons.logging"
    relocate "org.apache.http", "stevekung.mods.ytchat.relocate.org.apache.http"
    relocate "org.codehaus", "stevekung.mods.ytchat.relocate.org.codehaus"
    relocate "org.mortbay", "stevekung.mods.ytchat.relocate.org.mortbay"
    relocate "org.checkerframework", "stevekung.mods.ytchat.relocate.org.checkerframework"
    relocate "javax.annotation", "stevekung.mods.ytchat.relocate.javax.annotation"
    relocate "javax.servlet", "stevekung.mods.ytchat.relocate.javax.servlet"
    relocate "com.google.api", "stevekung.mods.ytchat.relocate.com.google.api"
    relocate "com.google.common", "stevekung.mods.ytchat.relocate.com.google.common"
    relocate "com.google.errorprone", "stevekung.mods.ytchat.relocate.com.google.errorprone"
    relocate "com.google.j2objc", "stevekung.mods.ytchat.relocate.com.google.j2objc"
    relocate "com.google.thirdparty", "stevekung.mods.ytchat.relocate.com.google.thirdparty"
    relocate "com.fasterxml", "stevekung.mods.ytchat.relocate.com.fasterxml"

    classifier ""
    dependencies {
        include(dependency(fileTree(dir: "M:/Modding/YouTubeChat/1.13-pre/.dependencies", include: "*.jar")))
    }
    exclude "stevekung/mods/stevekunglib/**"
    exclude "META-INF/stevekunglib_at.cfg"
    exclude "META-INF/maven/**"
    exclude "dummyThing"
    exclude "mozilla/public-suffix-list.txt"
}

reobf {
    shadowJar {}
}

jar {
    from configurations.embed.collect {
        exclude "META-INF/LICENSE*"
        exclude "META-INF/NOTICE*"
        it.isDirectory() ? it : zipTree(it)
    }
}

curseforge {
    apiKey = api.youtube_chat
    project {
        id = "302916"
        changelog = "Change Log"
        changelogType = "WYSIWYG"
        releaseType = "release"
        addGameVersion mcVersion

        afterEvaluate { //TODO Temp fix
            gameVersionStrings.remove('Java 9')
        }

        mainArtifact(file("build/libs/YouTubeChat-" + mcVersion + "-" + version + ".jar")) {
            displayName = "YouTubeChat-" + mcVersion + "-" + version
            relations {
                requiredLibrary "stevekungs-lib"
            }
        }
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    keyStore = keystore.keystore_path
    alias = keystore.alias
    storePass = keystore.keystore_pass
    keyPass = keystore.keystore_pass
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar